/**
 * Revenue Settlement and Sharing System GE
 * Copyright (C) 2011-2014,  Javier Lucio - lucio@tid.es
 * Telefonica Investigacion y Desarrollo, S.A.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package es.upm.fiware.rss.model;

// Generated 20-feb-2012 9:51:24 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * BmObCountry generated by hbm2java.
 */
@Entity
@Table(name = "bm_ob_country")
@Cacheable
@Cache(usage = CacheConcurrencyStrategy.READ_ONLY)
public class BmObCountry implements java.io.Serializable {

    /**
     * Default serial version UID.
     */
    private static final long serialVersionUID = 1L;

    private BmObCountryId id;
    private BmOb bmOb;
    private BmCountry bmCountry;
    private String tcPricepointsYn;
    private String txMncItuT212;
    private Set<BmPricePoint> bmPricePoints = new HashSet<BmPricePoint>(0);
    private Set<BmServiceDeployment> bmServiceDeployments = new HashSet<BmServiceDeployment>(0);
    private Set<BmObMop> bmObMops = new HashSet<BmObMop>(0);

    /**
     * Constructor.
     */
    public BmObCountry() {
    }

    /**
     * Constructor.
     * 
     * @param id
     * @param bmOb
     * @param bmCountry
     */
    public BmObCountry(BmObCountryId id, BmOb bmOb, BmCountry bmCountry) {
        this.id = id;
        this.bmOb = bmOb;
        this.bmCountry = bmCountry;
    }

    /**
     * Constructor.
     * 
     * @param id
     * @param bmOb
     * @param bmCountry
     * @param tcPricepointsYn
     * @param txMncItuT212
     * @param bmPricePoints
     * @param bmServiceDeployments
     * @param bmObMops
     */
    public BmObCountry(BmObCountryId id, BmOb bmOb, BmCountry bmCountry, String tcPricepointsYn, String txMncItuT212,
        Set<BmPricePoint> bmPricePoints, Set<BmServiceDeployment> bmServiceDeployments, Set<BmObMop> bmObMops) {
        this.id = id;
        this.bmOb = bmOb;
        this.bmCountry = bmCountry;
        this.tcPricepointsYn = tcPricepointsYn;
        this.bmPricePoints = bmPricePoints;
        this.bmServiceDeployments = bmServiceDeployments;
        this.bmObMops = bmObMops;
        this.txMncItuT212 = txMncItuT212;
    }

    @EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "nuObId", column = @Column(name = "NU_OB_ID", nullable = false, precision = 10,
            scale = 0)),
        @AttributeOverride(name = "nuCountryId", column = @Column(name = "NU_COUNTRY_ID", nullable = false,
            precision = 10, scale = 0))
    })
    public BmObCountryId getId() {
        return this.id;
    }

    public void setId(BmObCountryId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "NU_OB_ID", nullable = false, insertable = false, updatable = false)
    public BmOb getBmOb() {
        return this.bmOb;
    }

    public void setBmOb(BmOb bmOb) {
        this.bmOb = bmOb;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "NU_COUNTRY_ID", nullable = false, insertable = false, updatable = false)
    public BmCountry getBmCountry() {
        return this.bmCountry;
    }

    public void setBmCountry(BmCountry bmCountry) {
        this.bmCountry = bmCountry;
    }

    @Column(name = "TC_PRICEPOINTS_YN", length = 20)
    public String getTcPricepointsYn() {
        return this.tcPricepointsYn;
    }

    public void setTcPricepointsYn(String tcPricepointsYn) {
        this.tcPricepointsYn = tcPricepointsYn;
    }

    @Column(name = "TX_MNC_ITU_T212", length = 20)
    public String getTxMncItuT212() {
        return this.txMncItuT212;
    }

    public void setTxMncItuT212(String txMncItuT212) {
        this.txMncItuT212 = txMncItuT212;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "bmObCountry")
    public Set<BmPricePoint> getBmPricePoints() {
        return this.bmPricePoints;
    }

    public void setBmPricePoints(Set<BmPricePoint> bmPricePoints) {
        this.bmPricePoints = bmPricePoints;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "bmObCountry")
    public Set<BmServiceDeployment> getBmServiceDeployments() {
        return this.bmServiceDeployments;
    }

    public void setBmServiceDeployments(Set<BmServiceDeployment> bmServiceDeployments) {
        this.bmServiceDeployments = bmServiceDeployments;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "bmObCountry")
    public Set<BmObMop> getBmObMops() {
        return this.bmObMops;
    }

    public void setBmObMops(Set<BmObMop> bmObMops) {
        this.bmObMops = bmObMops;
    }
}
