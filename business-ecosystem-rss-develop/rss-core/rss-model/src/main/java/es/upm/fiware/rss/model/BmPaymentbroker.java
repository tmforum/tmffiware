/**
 * Revenue Settlement and Sharing System GE
 * Copyright (C) 2011-2014,  Javier Lucio - lucio@tid.es
 * Telefonica Investigacion y Desarrollo, S.A.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package es.upm.fiware.rss.model;

// Generated 10-feb-2012 11:04:29 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * BmPaymentbroker generated by hbm2java.
 */
@Entity
@Table(name = "bm_paymentbroker")
@Cacheable
@Cache(usage = CacheConcurrencyStrategy.READ_ONLY)
public class BmPaymentbroker implements java.io.Serializable {

    private long bmPbId;
    private String txName;
    private Set<BmPbMop> bmPbMops = new HashSet<BmPbMop>(0);
    private Set<BmObMop> bmObMops = new HashSet<BmObMop>(0);

    /**
     * Constructor.
     */
    public BmPaymentbroker() {
    }

    /**
     * Constructor.
     * 
     * @param bmPbId
     */
    public BmPaymentbroker(long bmPbId) {
        this.bmPbId = bmPbId;
    }

    /**
     * Constructor.
     * 
     * @param bmPbId
     * @param txName
     * @param bmPbMops
     * @param bmObMops
     */
    public BmPaymentbroker(long bmPbId, String txName, Set<BmPbMop> bmPbMops, Set<BmObMop> bmObMops) {
        this.bmPbId = bmPbId;
        this.txName = txName;
        this.bmPbMops = bmPbMops;
        this.bmObMops = bmObMops;
    }

    @Id
    @Column(name = "BM_PB_ID", unique = true, nullable = false, precision = 10, scale = 0)
    public long getBmPbId() {
        return this.bmPbId;
    }

    public void setBmPbId(long bmPbId) {
        this.bmPbId = bmPbId;
    }

    @Column(name = "TX_NAME", length = 20)
    public String getTxName() {
        return this.txName;
    }

    public void setTxName(String txName) {
        this.txName = txName;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "bmPaymentbroker")
    public Set<BmPbMop> getBmPbMops() {
        return this.bmPbMops;
    }

    public void setBmPbMops(Set<BmPbMop> bmPbMops) {
        this.bmPbMops = bmPbMops;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "bmPaymentbroker")
    public Set<BmObMop> getBmObMops() {
        return this.bmObMops;
    }

    public void setBmObMops(Set<BmObMop> bmObMops) {
        this.bmObMops = bmObMops;
    }

}
