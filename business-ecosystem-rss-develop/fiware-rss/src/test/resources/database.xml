<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">

     <context:component-scan base-package="es.upm.fiware" />

    <!-- Load all properties in classpath -->
    <context:property-placeholder location="classpath*:*.properties"/>
    
    <util:properties id="rssProps" location="classpath:rss.properties"/>
    
    <bean id="databaseProperties" class="es.upm.fiware.rss.common.properties.AppProperties">
    	<constructor-arg value="database.properties" name="filename" type="java.lang.String"></constructor-arg>
    </bean>
    <bean id="oauthProperties" class="es.upm.fiware.rss.common.properties.AppProperties">
    	<constructor-arg value="oauth.properties" name="filename" type="java.lang.String"></constructor-arg>
    </bean>
    
    <bean id="databaseLoader" class="es.upm.fiware.rss.common.test.DatabaseLoader"  init-method="init" destroy-method="cleanup"/>

    <!-- Database config -->
	<!-- Pool -->
	<bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${database.test.driverClassName}" />
		<property name="url" value="${database.test.url}" />
		<property name="username" value="${database.test.username}" />
		<property name="password" value="${database.test.password}" />
		<!-- Pool settings -->
		<property name="poolPreparedStatements" value="true" />
	    <property name="initialSize" value="5" />
	    <property name="maxActive" value="50" />
	    <property name="maxIdle" value="2" />
	    <property name="defaultAutoCommit" value="false" />
	</bean>
	
	<!-- Transaction manager definition -->  	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
     <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <!-- Tunning config x integration environment -->
                <prop key="hibernate.jdbc.batch_size">16</prop>
                <prop key="hibernate.default_batch_fetch_size">8</prop>
                <prop key="hibernate.connection.release_mode">after_transaction</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <!-- prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop-->
            </props> 
        </property>
        <property name="packagesToScan">
            <list>
               <value>es.upm.fiware.rss.model</value>
            </list>
        </property>  
    </bean>  
  
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
      <property name="sessionFactory" ref="sessionFactory" />  
   </bean> 
    

</beans>
